name: CI
on:
  push:
    branches: [master]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      - uses: coursier/cache-action@v6
      - name: Validate project    
        run: sbt validate
      - name: Publish backend
        env:
          JIB_TARGET_IMAGE_USERNAME: johnspade
          JIB_TARGET_IMAGE_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: sbt publishDockerContainer

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Get sbt-dynver version
        id: version
        run: |
          VERSION=$(sbt -Dsbt.ci=true -Dsbt.supershell=false -Dsbt.color=false -Dsbt.log.noformat=true -error "print frontend/version")
          echo ${VERSION}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Compile frontend   
        run: sbt 'frontend / Compile / fullLinkJS'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/johnspade/nastenka-frontend:${{ steps.version.outputs.version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
